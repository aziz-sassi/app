{"ast":null,"code":"import React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nvar SHOULD_NOT_UPDATE = true;\nvar styles = StyleSheet.create({\n  weekColumnContainer: {\n    flex: 1,\n    alignItems: 'center'\n  },\n  weekDaysContainer: {\n    flexDirection: 'row'\n  }\n});\nvar WeekColumn = React.memo(function (props) {\n  return React.createElement(View, {\n    style: [styles.weekColumnContainer, props.theme.weekColumnStyle]\n  }, React.createElement(Text, {\n    allowFontScaling: false,\n    style: props.theme.weekColumnTextStyle\n  }, props.day));\n}, function () {\n  return SHOULD_NOT_UPDATE;\n});\nexport default React.memo(function (props) {\n  return React.createElement(View, {\n    style: [styles.weekDaysContainer, props.theme.weekColumnsContainerStyle]\n  }, props.days.map(function (day) {\n    return React.createElement(WeekColumn, {\n      key: day,\n      day: day,\n      theme: props.theme\n    });\n  }));\n}, function () {\n  return SHOULD_NOT_UPDATE;\n});","map":{"version":3,"sources":["index.tsx"],"names":["SHOULD_NOT_UPDATE","styles","weekColumnContainer","flex","alignItems","weekDaysContainer","flexDirection","WeekColumn","props","weekColumnTextStyle","day","theme"],"mappings":"AAAA,OAAA,KAAA,MAAA,OAAA;;;;AAIA,IAAMA,iBAAiB,GAAvB,IAAA;AAOA,IAAMC,MAAM,GAAG,UAAU,CAAV,MAAA,CAAkB;AAC/BC,EAAAA,mBAAmB,EAAE;AACnBC,IAAAA,IAAI,EADe,CAAA;AAEnBC,IAAAA,UAAU,EAAE;AAFO,GADU;AAK/BC,EAAAA,iBAAiB,EAAE;AACjBC,IAAAA,aAAa,EAAE;AADE;AALY,CAAlB,CAAf;AAUA,IAAMC,UAAU,GAAG,KAAK,CAAL,IAAA,CAChBC,UAAAA,KAAD;AAAA,SACE,KAAA,CAAA,aAAA,CAAA,IAAA,EAAA;AAAM,IAAA,KAAK,EAAE,CAACP,MAAM,CAAP,mBAAA,EAA6BO,KAAK,CAALA,KAAAA,CAA7B,eAAA;AAAb,GAAA,EACE,KAAA,CAAA,aAAA,CAAA,IAAA,EAAA;AAAM,IAAA,gBAAgB,EAAtB,KAAA;AAA+B,IAAA,KAAK,EAAEA,KAAK,CAALA,KAAAA,CAAYC;AAAlD,GAAA,EACGD,KAAK,CAJK,GAGb,CADF,CADF;AAAA,CADiB,EAQjB;AAAA,SARF,iBAQE;AAAA,CARiB,CAAnB;AAgBA,eAAe,KAAK,CAAL,IAAA,CACZA,UAAAA,KAAD;AAAA,SACE,KAAA,CAAA,aAAA,CAAA,IAAA,EAAA;AACE,IAAA,KAAK,EAAE,CAACP,MAAM,CAAP,iBAAA,EAA2BO,KAAK,CAALA,KAAAA,CAA3B,yBAAA;AADT,GAAA,EAGG,KAAK,CAAL,IAAA,CAAA,GAAA,CAAgBE,UAAAA,GAAD;AAAA,WACd,KAAA,CAAA,aAAA,CAAA,UAAA,EAAA;AAAY,MAAA,GAAG,EAAf,GAAA;AAAsB,MAAA,GAAG,EAAzB,GAAA;AAAgC,MAAA,KAAK,EAAEF,KAAK,CAACG;AAA7C,KAAA,CADc;AAAA,GAAf,CAHH,CADF;AAAA,CADa,EAUb;AAAA,SAVF,iBAUE;AAAA,CAVa,CAAf","sourcesContent":["import React from 'react';\nimport { View, Text, StyleSheet } from 'react-native';\nimport { ThemeType } from '../../types';\n\nconst SHOULD_NOT_UPDATE = true;\n\ninterface WeekColumnProps {\n  day: string;\n  theme: ThemeType;\n}\n\nconst styles = StyleSheet.create({\n  weekColumnContainer: {\n    flex: 1,\n    alignItems: 'center',\n  },\n  weekDaysContainer: {\n    flexDirection: 'row',\n  },\n});\n\nconst WeekColumn = React.memo<WeekColumnProps>(\n  (props: WeekColumnProps) => (\n    <View style={[styles.weekColumnContainer, props.theme.weekColumnStyle]}>\n      <Text allowFontScaling={false} style={props.theme.weekColumnTextStyle}>\n        {props.day}\n      </Text>\n    </View>\n  ),\n  () => SHOULD_NOT_UPDATE\n);\n\ninterface WeekDaysProps {\n  days: string[];\n  theme: ThemeType;\n}\n\nexport default React.memo<WeekDaysProps>(\n  (props: WeekDaysProps) => (\n    <View\n      style={[styles.weekDaysContainer, props.theme.weekColumnsContainerStyle]}\n    >\n      {props.days.map((day: string) => (\n        <WeekColumn key={day} day={day} theme={props.theme} />\n      ))}\n    </View>\n  ),\n  () => SHOULD_NOT_UPDATE\n);\n"]},"metadata":{},"sourceType":"module"}