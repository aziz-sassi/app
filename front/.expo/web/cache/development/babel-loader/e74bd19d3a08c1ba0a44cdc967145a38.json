{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { Calendar } from 'react-native-calendario';\nimport View from \"react-native-web/dist/exports/View\";\nimport React from 'react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nvar Example = function (_React$Component) {\n  _inherits(Example, _React$Component);\n\n  var _super = _createSuper(Example);\n\n  function Example() {\n    _classCallCheck(this, Example);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Example, [{\n    key: \"render\",\n    value: function render() {\n      return _jsx(View, {\n        style: {\n          paddingTop: 50,\n          flex: 1\n        },\n        children: _jsx(Calendar, {\n          onChange: function onChange(range) {\n            return console.log(range);\n          },\n          minDate: new Date(2018, 3, 20),\n          startDate: new Date(2018, 3, 30),\n          endDate: new Date(2018, 4, 5),\n          theme: {\n            activeDayColor: {},\n            monthTitleTextStyle: {\n              color: '#6d95da',\n              fontWeight: '300',\n              fontSize: 16\n            },\n            emptyMonthContainerStyle: {},\n            emptyMonthTextStyle: {\n              fontWeight: '200'\n            },\n            weekColumnsContainerStyle: {},\n            weekColumnStyle: {\n              paddingVertical: 10\n            },\n            weekColumnTextStyle: {\n              color: '#b6c1cd',\n              fontSize: 13\n            },\n            nonTouchableDayContainerStyle: {},\n            nonTouchableDayTextStyle: {},\n            startDateContainerStyle: {},\n            endDateContainerStyle: {},\n            dayContainerStyle: {},\n            dayTextStyle: {\n              color: '#2d4150',\n              fontWeight: '200',\n              fontSize: 15\n            },\n            dayOutOfRangeContainerStyle: {},\n            dayOutOfRangeTextStyle: {},\n            todayContainerStyle: {},\n            todayTextStyle: {\n              color: '#6d95da'\n            },\n            activeDayContainerStyle: {\n              backgroundColor: '#6d95da'\n            },\n            activeDayTextStyle: {\n              color: 'white'\n            },\n            nonTouchableLastMonthDayTextStyle: {}\n          }\n        })\n      });\n    }\n  }]);\n\n  return Example;\n}(React.Component);\n\nexport { Example as default };","map":{"version":3,"sources":["C:/Users/mahdo/OneDrive/Bureau/cluby-/src/screens/Calendar.js"],"names":["Calendar","React","Example","paddingTop","flex","range","console","log","Date","activeDayColor","monthTitleTextStyle","color","fontWeight","fontSize","emptyMonthContainerStyle","emptyMonthTextStyle","weekColumnsContainerStyle","weekColumnStyle","paddingVertical","weekColumnTextStyle","nonTouchableDayContainerStyle","nonTouchableDayTextStyle","startDateContainerStyle","endDateContainerStyle","dayContainerStyle","dayTextStyle","dayOutOfRangeContainerStyle","dayOutOfRangeTextStyle","todayContainerStyle","todayTextStyle","activeDayContainerStyle","backgroundColor","activeDayTextStyle","nonTouchableLastMonthDayTextStyle","Component"],"mappings":";;;;;;;;;;AAAA,SAASA,QAAT,QAAyB,yBAAzB;;AAGA,OAAOC,KAAP,MAAkB,OAAlB;;;IAEqBC,O;;;;;;;;;;;;;WACnB,kBAAS;AACP,aACE,KAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAAEC,UAAAA,UAAU,EAAE,EAAd;AAAkBC,UAAAA,IAAI,EAAE;AAAxB,SAAb;AAAA,kBACE,KAAC,QAAD;AACN,UAAA,QAAQ,EAAE,kBAACC,KAAD;AAAA,mBAAWC,OAAO,CAACC,GAAR,CAAYF,KAAZ,CAAX;AAAA,WADJ;AAEN,UAAA,OAAO,EAAE,IAAIG,IAAJ,CAAS,IAAT,EAAe,CAAf,EAAkB,EAAlB,CAFH;AAGN,UAAA,SAAS,EAAE,IAAIA,IAAJ,CAAS,IAAT,EAAe,CAAf,EAAkB,EAAlB,CAHL;AAIN,UAAA,OAAO,EAAE,IAAIA,IAAJ,CAAS,IAAT,EAAe,CAAf,EAAkB,CAAlB,CAJH;AAKN,UAAA,KAAK,EAAE;AACLC,YAAAA,cAAc,EAAE,EADX;AAELC,YAAAA,mBAAmB,EAAE;AACnBC,cAAAA,KAAK,EAAE,SADY;AAEnBC,cAAAA,UAAU,EAAE,KAFO;AAGnBC,cAAAA,QAAQ,EAAE;AAHS,aAFhB;AAOLC,YAAAA,wBAAwB,EAAE,EAPrB;AAQLC,YAAAA,mBAAmB,EAAE;AACnBH,cAAAA,UAAU,EAAE;AADO,aARhB;AAWLI,YAAAA,yBAAyB,EAAE,EAXtB;AAYLC,YAAAA,eAAe,EAAE;AACfC,cAAAA,eAAe,EAAE;AADF,aAZZ;AAeLC,YAAAA,mBAAmB,EAAE;AACnBR,cAAAA,KAAK,EAAE,SADY;AAEnBE,cAAAA,QAAQ,EAAE;AAFS,aAfhB;AAmBLO,YAAAA,6BAA6B,EAAE,EAnB1B;AAoBLC,YAAAA,wBAAwB,EAAE,EApBrB;AAqBLC,YAAAA,uBAAuB,EAAE,EArBpB;AAsBLC,YAAAA,qBAAqB,EAAE,EAtBlB;AAuBLC,YAAAA,iBAAiB,EAAE,EAvBd;AAwBLC,YAAAA,YAAY,EAAE;AACZd,cAAAA,KAAK,EAAE,SADK;AAEZC,cAAAA,UAAU,EAAE,KAFA;AAGZC,cAAAA,QAAQ,EAAE;AAHE,aAxBT;AA6BLa,YAAAA,2BAA2B,EAAE,EA7BxB;AA8BLC,YAAAA,sBAAsB,EAAE,EA9BnB;AA+BLC,YAAAA,mBAAmB,EAAE,EA/BhB;AAgCLC,YAAAA,cAAc,EAAE;AACdlB,cAAAA,KAAK,EAAE;AADO,aAhCX;AAmCLmB,YAAAA,uBAAuB,EAAE;AACvBC,cAAAA,eAAe,EAAE;AADM,aAnCpB;AAsCLC,YAAAA,kBAAkB,EAAE;AAClBrB,cAAAA,KAAK,EAAE;AADW,aAtCf;AAyCLsB,YAAAA,iCAAiC,EAAE;AAzC9B;AALD;AADF,QADF;AAqDD;;;;EAvDkChC,KAAK,CAACiC,S;;SAAtBhC,O","sourcesContent":["import { Calendar } from 'react-native-calendario';\r\n\r\nimport { View } from 'react-native';\r\nimport React from 'react';\r\n\r\nexport default class Example extends React.Component {\r\n  render() {\r\n    return (\r\n      <View style={{ paddingTop: 50, flex: 1 }}>\r\n        <Calendar\r\n  onChange={(range) => console.log(range)}\r\n  minDate={new Date(2018, 3, 20)}\r\n  startDate={new Date(2018, 3, 30)}\r\n  endDate={new Date(2018, 4, 5)}\r\n  theme={{\r\n    activeDayColor: {},\r\n    monthTitleTextStyle: {\r\n      color: '#6d95da',\r\n      fontWeight: '300',\r\n      fontSize: 16,\r\n    },\r\n    emptyMonthContainerStyle: {},\r\n    emptyMonthTextStyle: {\r\n      fontWeight: '200',\r\n    },\r\n    weekColumnsContainerStyle: {},\r\n    weekColumnStyle: {\r\n      paddingVertical: 10,\r\n    },\r\n    weekColumnTextStyle: {\r\n      color: '#b6c1cd',\r\n      fontSize: 13,\r\n    },\r\n    nonTouchableDayContainerStyle: {},\r\n    nonTouchableDayTextStyle: {},\r\n    startDateContainerStyle: {},\r\n    endDateContainerStyle: {},\r\n    dayContainerStyle: {},\r\n    dayTextStyle: {\r\n      color: '#2d4150',\r\n      fontWeight: '200',\r\n      fontSize: 15,\r\n    },\r\n    dayOutOfRangeContainerStyle: {},\r\n    dayOutOfRangeTextStyle: {},\r\n    todayContainerStyle: {},\r\n    todayTextStyle: {\r\n      color: '#6d95da',\r\n    },\r\n    activeDayContainerStyle: {\r\n      backgroundColor: '#6d95da',\r\n    },\r\n    activeDayTextStyle: {\r\n      color: 'white',\r\n    },\r\n    nonTouchableLastMonthDayTextStyle: {},\r\n  }}\r\n/>\r\n      </View>\r\n    );\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}