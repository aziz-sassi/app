{"ast":null,"code":"import React, { useMemo } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nvar styles = StyleSheet.create({\n  container: {\n    width: 4,\n    height: 4,\n    borderRadius: 2\n  }\n});\n\nfunction Dot(_ref) {\n  var active = _ref.active,\n      color = _ref.color,\n      index = _ref.index,\n      selectedColor = _ref.selectedColor,\n      dotContainerStyle = _ref.dotContainerStyle;\n  var style = useMemo(function () {\n    return {\n      marginLeft: index === 0 ? 0 : 2\n    };\n  }, [index]);\n  return React.createElement(View, {\n    style: [styles.container, style, dotContainerStyle, {\n      backgroundColor: active ? selectedColor : color\n    }]\n  });\n}\n\nexport default Dot;","map":{"version":3,"sources":["index.tsx"],"names":["styles","container","width","height","borderRadius","dotContainerStyle","style","useMemo","marginLeft","index","backgroundColor","active","color"],"mappings":"AAAA,OAAA,KAAA,IAAA,OAAA,QAAA,OAAA;;;AAKA,IAAMA,MAAM,GAAG,UAAU,CAAV,MAAA,CAAkB;AAC/BC,EAAAA,SAAS,EAAE;AACTC,IAAAA,KAAK,EADI,CAAA;AAETC,IAAAA,MAAM,EAFG,CAAA;AAGTC,IAAAA,YAAY,EAAE;AAHL;AADoB,CAAlB,CAAf;;AAaA,SAAA,GAAA,OAMU;AAAA,MANG,MAMH,QANG,MAMH;AAAA,MANG,KAMH,QANG,KAMH;AAAA,MANG,KAMH,QANG,KAMH;AAAA,MANG,aAMH,QANG,aAMH;AAAA,MADRC,iBACQ,QADRA,iBACQ;AACR,MAAMC,KAAK,GAAGC,OAAO,CAAC;AAAA,WAAO;AAAEC,MAAAA,UAAU,EAAEC,KAAK,KAALA,CAAAA,GAAAA,CAAAA,GAAkB;AAAhC,KAAP;AAAA,GAAD,EAA8C,CAAnE,KAAmE,CAA9C,CAArB;AAEA,SACE,KAAA,CAAA,aAAA,CAAA,IAAA,EAAA;AACE,IAAA,KAAK,EAAE,CACLT,MAAM,CADD,SAAA,EAAA,KAAA,EAAA,iBAAA,EAIL;AACEU,MAAAA,eAAe,EAAEC,MAAM,GAAA,aAAA,GAAmBC;AAD5C,KAJK;AADT,GAAA,CADF;AAYD;;AAED,eAAA,GAAA","sourcesContent":["import React, { useMemo } from 'react';\nimport { StyleSheet, View } from 'react-native';\n\nimport { DayDot, DotTheme } from '../../types';\n\nconst styles = StyleSheet.create({\n  container: {\n    width: 4,\n    height: 4,\n    borderRadius: 2,\n  },\n});\n\ninterface Props extends DayDot, DotTheme {\n  active: boolean;\n  index: number;\n}\n\nfunction Dot({\n  active,\n  color,\n  index,\n  selectedColor,\n  dotContainerStyle,\n}: Props) {\n  const style = useMemo(() => ({ marginLeft: index === 0 ? 0 : 2 }), [index]);\n\n  return (\n    <View\n      style={[\n        styles.container,\n        style,\n        dotContainerStyle,\n        {\n          backgroundColor: active ? selectedColor : color,\n        },\n      ]}\n    />\n  );\n}\n\nexport default Dot;\n"]},"metadata":{},"sourceType":"module"}